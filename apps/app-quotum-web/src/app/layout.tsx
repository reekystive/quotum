import { ThemeProvider } from '#src/providers/theme-provider.tsx';
import { getTitleWithEnvPrefix } from '#src/utils/env-title.ts';
import { getThemeFromServerCookie } from '#src/utils/theme-server.ts';
import '#src/utils/tree-shaking.ts';
import type { Metadata, Viewport } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import { clientInit } from './client-init-once.ts';
import './globals.css';
import { RootLayout } from './root-layout.tsx';
import { RootProviders } from './root-providers.tsx';

if (typeof window !== 'undefined') {
  clientInit();
}

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

// eslint-disable-next-line react-refresh/only-export-components
export const metadata: Metadata = {
  title: getTitleWithEnvPrefix('Quotum'),
  description: 'Generated by create next app',
};

// eslint-disable-next-line react-refresh/only-export-components
export const viewport: Viewport = {
  initialScale: 1,
  width: 'device-width',
};

export default async function Layout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const theme = (await getThemeFromServerCookie()) satisfies 'light' | 'dark' | 'system' | null;
  return (
    <html lang="en" suppressHydrationWarning data-theme={theme ?? 'system'}>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ThemeProvider themeFromCookie={theme}>
          <RootProviders>
            <RootLayout>{children}</RootLayout>
          </RootProviders>
        </ThemeProvider>
      </body>
    </html>
  );
}
